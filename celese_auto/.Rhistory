library(shiny)
install(shiny)
?library(shiny)
ui <- fluidPage(
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
View(server)
install.packages("shiny")
install.packages("DT")
shiny::runApp('Downloads/servant_list')
df <- read.csv("servant.csv")
df <- read.csv("servant.csv")
runApp('Downloads/servant_list')
runApp('Downloads/servant_list')
df <- read.csv("servant.csv")
df <- read.csv("servant.csv")
df <- read.csv("servant.csv",encording = "UTF-8")
?read.csv
df <- read.csv("servant.csv",encoding = "UTF-8")
shiny::runApp('Downloads/ServantList')
runApp('Downloads/ServantList')
runApp('Downloads/ServantList')
View(server)
install.packages("shiny")
install.packages("shiny")
shiny::runApp('Downloads/ServantList')
install.packages("DT")
install.packages("DT")
df <- read.csv("servant.csv")
df <- read.csv("servant.csv")
df <- read.csv("servant.csv",header = T)
getwd()　
df <- read.csv("servant.csv",header = T)
View(df)
View(df)
shiny::runApp('Downloads/ServantList')
shiny::runApp()
shiny::runApp("")
shiny::runApp('servant_list')
install.packages("rlang")
runApp('servant_list')
install.packages("rlang")
runApp('servant_list')
shiny::runApp('servant_list')
shiny::runApp('learnEnglish')
shiny::runApp('learnEnglish/celese_auto')
runApp('learnEnglish/word_test')
runApp('learnEnglish/celese_auto')
runApp('learnEnglish/celese_auto')
runApp('learnEnglish/celese_auto')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
ui <- fluidPage(
titlePanel("Change"),
fileInput("file", "Choose CSV File",accept = c("text/csv","text/comma-separated-values,text/plain",".csv")),
selectInput("select", label = h6("Number of choices"), choices = list("1a" = 1, "1b" = 2, "2a" = 3, "2b" = 4, "3a" = 5, "3b" = 6, "4a" = 7, "4b" = 8, "5a" = 9, "5b" = 10), selected = 1),
actionButton("start","Make")
)
server <- function(input, output) {
df <- NULL
observeEvent(input$file, {
df <<- read.csv(input$file$datapath)
df_original <<- as.character(df$original)
})
observeEvent(input$start,{
change()
change2()
data_save()
})
words1 <<- c("CELESE AWL Sublist 1a page 1 of 5","CELESE AWL Sublist 1a page 2 of 5",
"CELESE AWL Sublist 1a page 3 of 5","CELESE AWL Sublist 1a page 4 of 5",
"CELESE AWL Sublist 1a page 5 of 5")
words2 <<- c("CELESE AWL Sublist 1b page 1 of 5","CELESE AWL Sublist 1b page 2 of 5",
"CELESE AWL Sublist 1b page 3 of 5","CELESE AWL Sublist 1b page 4 of 5",
"CELESE AWL Sublist 1b page 5 of 5")
words3 <<- c("CELESE AWL Sublist 2a page 1 of 5","CELESE AWL Sublist 2a page 2 of 5",
"CELESE AWL Sublist 2a page 3 of 5","CELESE AWL Sublist 2a page 4 of 5",
"CELESE AWL Sublist 2a page 5 of 5")
words4 <<- c("CELESE AWL Sublist 2b page 1 of 5","CELESE AWL Sublist 2b page 2 of 5",
"CELESE AWL Sublist 2b page 3 of 5","CELESE AWL Sublist 2b page 4 of 5",
"CELESE AWL Sublist 2b page 5 of 5")
words5 <<- c("CELESE AWL Sublist 3a page 1 of 5","CELESE AWL Sublist 3a page 2 of 5",
"CELESE AWL Sublist 3a page 3 of 5","CELESE AWL Sublist 3a page 4 of 5",
"CELESE AWL Sublist 3a page 5 of 5")
words6 <<- c("CELESE AWL Sublist 3b page 1 of 5","CELESE AWL Sublist 3b page 2 of 5",
"CELESE AWL Sublist 3b page 3 of 5","CELESE AWL Sublist 3b page 4 of 5",
"CELESE AWL Sublist 3b page 5 of 5")
words7 <<- c("CELESE AWL Sublist 4a page 1 of 5","CELESE AWL Sublist 4a page 2 of 5",
"CELESE AWL Sublist 4a page 3 of 5","CELESE AWL Sublist 4a page 4 of 5",
"CELESE AWL Sublist 4a page 5 of 5")
words8 <<- c("CELESE AWL Sublist 4b page 1 of 5","CELESE AWL Sublist 4b page 2 of 5",
"CELESE AWL Sublist 4b page 3 of 5","CELESE AWL Sublist 4b page 4 of 5",
"CELESE AWL Sublist 4b page 5 of 5")
words9 <<- c("CELESE AWL Sublist 5a page 1 of 5","CELESE AWL Sublist 5a page 2 of 5",
"CELESE AWL Sublist 5a page 3 of 5","CELESE AWL Sublist 5a page 4 of 5",
"CELESE AWL Sublist 5a page 5 of 5")
words10 <<- c("CELESE AWL Sublist 5b page 1 of 5","CELESE AWL Sublist 5b page 2 of 5",
"CELESE AWL Sublist 5b page 3 of 5","CELESE AWL Sublist 5b page 4 of 5",
"CELESE AWL Sublist 5b page 5 of 5")
all_words <<- list(words1,words2,words3,words4,words5,words6,words7,words8,words9,words10)
#不必要なの削除
change <- function(){
ans_num <<- as.numeric(input$select)
words_select(ans_num)
df_original_ <<- df_original[-which(df_original %in% c("Level: AWL"))]
df_original_ <<- df_original_[-which(df_original_ %in% c(selected_words[1]))]
df_original_ <<- df_original_[-which(df_original_ %in% c(selected_words[2]))]
df_original_ <<- df_original_[-which(df_original_ %in% c(selected_words[3]))]
df_original_ <<- df_original_[-which(df_original_ %in% c(selected_words[4]))]
df_original_ <<- df_original_[-which(df_original_ %in% c(selected_words[5]))]
word1 <- sapply(1:length(df_original_), function(x) if(regexpr(": ", df_original_[x]) == 2 || regexpr(": ", df_original_[x]) == 3) df_original_[x])
word2 <- unlist(word1)
word3 <<- sapply(1:length(word2), function(x){
if(x < 10) substr(word2[x], 4, regexpr("\\(", word2[x]) - 2)
else substr(word2[x], 5, regexpr("\\(", word2[x]) - 2)
})
sentence1 <- sapply(1:length(df_original_), function(x) if(regexpr(": ", df_original_[x]) != 2 && regexpr(": ", df_original_[x]) != 3) df_original_[x])
sentence2 <- unlist(sentence1)
sentence2 <<- sentence2[-which(sentence2 %in% c("Level: AWL"))]
# regexpr(": ", sentence2)
sentence3 <- sapply(1:length(sentence2), function(x){
if(x != length(sentence2)){
if(regexpr(": ", sentence2[x + 1]) == -1 && regexpr("¥¥. ", sentence2[x + 1]) != 2) paste(sentence2[x] , sentence2[x + 1], sep = "")
else if(regexpr(": ", sentence2[x]) == -1 && regexpr("¥¥. ", sentence2[x + 1] )!= 2) NULL
else sentence2[x]
}
else sentence2[x]
})
sentence3 <- unlist(sentence3)
sentence4 <- sapply(1:length(sentence3), function(x)if(regexpr(": ", sentence3[x]) != -1 || regexpr("¥¥. ", sentence2[x]) == 2) sentence3[x])
sentence4 <- unlist(sentence4)
sentence5 <- sapply(1:length(sentence4),function(x){
substr(sentence4[x],4, nchar(sentence4[x]))
})
sentence <<- sapply(1:length(sentence5),function(x){
substr(sentence5[x],regexpr(":", sentence5[x]) +2, nchar(sentence5[x]))
})
}
change2 <- function() {
deleted_word <<- (1:length(sentence))
changed_sentence <<- sapply(1:length(sentence), function(x){
num <- 0
tmp <-strsplit(sentence[x]," ")
tmp <- unlist(tmp)
num <- charmatch(word[x], tmp, nomatch = 0)
if(num != 0){
deleted_word[x] <<- tmp[num]
tmp[num] <- "_____"
return( paste(tmp[1:length(tmp)],collapse = " ") )
}
# print( charmatch(substr(word[x],1,nchar(word[x]) - 1), tmp, nomatch = 0) )
#
# num <- charmatch(substr(word[x],1,nchar(word[x]) - 1), tmp, nomatch = 0)
#
# if(num != 0){
#   deleted_word[x] <<- tmp[num]
#   tmp[num] <- "_____"
#   return( paste(tmp[1:length(tmp)],collapse = " ") )
# }
#
#
# num <- charmatch(substr(word[1],1,nchar(word[1]) - 2), tmp, nomatch = 0)
#
# if(num != 0){
#   deleted_word[x] <<- tmp[num]
#   tmp[num] <- "_____"
#   return( paste(tmp[1:length(tmp)],collapse = " ") )
# }
return( paste(tmp[1:length(tmp)],collapse = " ") )
})
}
words_select <- function(num){
selected_words <- all_words[num]
selected_words <<- unlist(selected_words)
}
data_save <- function(){
word <<- sapply(1:(length(word3) * 4), function(x){
word3[((x - 1) / 4) + 1]
})
word <<- unlist(word)
# df_data <<- data.frame(
#   word,sentence,changed_sentence,deleted_word
# )
print( length(word) )
print( sentence )
print( length(changed_sentence) )
print( length(deleted_word) )
# write.csv(df_data,file = "changed_data.csv",row.names = FALSE)
}
}
shinyApp(ui = ui, server = server)
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp('~/learnEnglish/word_test')
runApp()
runApp()
runApp('~/learnEnglish/word_test')
